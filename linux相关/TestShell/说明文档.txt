========================================================================
chmod a+x a.sh  #给脚本赋予执行权限，可以使用 ./a.sh执行(启动一个子shell)
========================================================================
/bin/bash: bad interpreter: Text file busy    
使用 lsof | grep a.sh  命令查看占用该文件的端口，kill掉端口  
https://blog.csdn.net/weixin_30532973/article/details/96350699
========================================================================
echo -e "\e[1;31mThis is text.\e[0m"  #带颜色字体输出31m=红色，32m绿色 31m--37m字体颜色，41m-47m背景颜色
========================================================================
PATH=$PATH:/new/bin
export PATH            #添加path变量
========================================================================
& 放在命令后面表示设置此进程为后台进程

默认情况下，进程是前台进程，这时此进程（命令执行相当于本质是开启一个进程）就把Shell给占据了，我们无法进行其他操作，对于那些没有交互的进程，很多时候，我们希望将其在后台启动，可以在启动参数的时候加一个'&'实现这个目的。
========================================================================
预定义变量
	$0	脚本名
	$*	所有参数
	$@  所有参数
	$#	参数的个数
	$$	当前进程的pid
	$!	上一个后台进程的pid
	$?	上一个命令的返回值0表示成功 
	basename 文件名
	dirname  路径名
========================================================================
. xxx.sh执行的脚本使用的相当于全局的shell
./xxx.sh执行的脚本使用的是自己虚拟出来的子shell
========================================================================